services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-init:
    build: .
    platform: linux/arm64
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow  # Use database
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    command: >
      bash -cx "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    depends_on:
      postgres:
        condition: service_healthy  # Wait for PostgreSQL to be ready

  airflow-scheduler:
    build: .
    platform: linux/arm64
    volumes:
      - ./dags:/opt/airflow/dags
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow  # Use database
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    depends_on:
      airflow-init:
        condition: service_completed_successfully  # Wait for init to finish
    command: scheduler

  airflow-webserver:
    build: .
    platform: linux/arm64
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow  # Use database
    depends_on:
      airflow-init:
        condition: service_completed_successfully  # Wait for init to finish
    command: webserver

volumes:
  postgres_data: